
CREATE DATABASE NovelHub
GO
USE NovelHub

CREATE TABLE Roles (
    RoleID INT IDENTITY(1,1) PRIMARY KEY,
    RoleName NVARCHAR(255)
);

CREATE TABLE Users (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    RoleID INT,
    Username NVARCHAR(255),
    Password NVARCHAR(255),
    Email NVARCHAR(255),
    Avatar NVARCHAR(MAX),
    Background NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (RoleID) REFERENCES Roles(RoleID) ON DELETE SET NULL ON UPDATE NO ACTION
);

CREATE TABLE NovelStatuses (
    StatusID INT IDENTITY(1,1) PRIMARY KEY,
    StatusName NVARCHAR(255)
);

CREATE TABLE Novels (
    NovelID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT,
    StatusID INT,
    Title NVARCHAR(MAX),
    Author NVARCHAR(MAX),
    Description NVARCHAR(MAX),
    Poster NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    LastUpdate DATETIME,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE SET NULL ON UPDATE NO ACTION,
    FOREIGN KEY (StatusID) REFERENCES NovelStatus(StatusID) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE Categories (
    CategoryID INT IDENTITY(1,1) PRIMARY KEY,
    CategoryName NVARCHAR(255)
);

CREATE TABLE NovelCategories (
    NovelID INT,
    CategoryID INT,
    Note NVARCHAR(MAX),
    FOREIGN KEY (NovelID) REFERENCES Novels(NovelID) ON DELETE CASCADE ON UPDATE NO ACTION,
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID) ON DELETE CASCADE ON UPDATE NO ACTION,
	PRIMARY KEY (NovelID, CategoryID)
);

CREATE TABLE Chapters (
    ChapterID INT IDENTITY(1,1) PRIMARY KEY,
    NovelID INT,
    ChapterNumber INT,
    ChapterTitle NVARCHAR(MAX),
    Content NVARCHAR(MAX),
    Views INT,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (NovelID) REFERENCES Novels (NovelID) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE Comments (
    CommentID INT IDENTITY(1,1) PRIMARY KEY,
    ChapterID INT,
    UserID INT,
    CommentText NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (ChapterID) REFERENCES Chapters (ChapterID) ON DELETE CASCADE ON UPDATE NO ACTION,
    FOREIGN KEY (UserID) REFERENCES Users (UserID) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE Reviews (
    NovelID INT,
    UserID INT,
    Rating INT,
    ReviewText NVARCHAR(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (NovelID) REFERENCES Novels (NovelID) ON DELETE CASCADE ON UPDATE NO ACTION,
    FOREIGN KEY (UserID) REFERENCES Users (UserID) ON DELETE CASCADE ON UPDATE NO ACTION,
	PRIMARY KEY (NovelID, UserID)
);

CREATE TABLE FavoriteNovels (
    UserID INT,
    NovelID INT,
    FavoritedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users (UserID) ON DELETE CASCADE ON UPDATE NO ACTION,
    FOREIGN KEY (NovelID) REFERENCES Novels (NovelID) ON DELETE CASCADE ON UPDATE NO ACTION,
	PRIMARY KEY (NovelID, UserID)
);

CREATE TABLE BlacklistedUsers (
    BlacklistedUserID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT,
    CreatedAt DATETIME DEFAULT GETDATE(),
    Note NVARCHAR(255),
    FOREIGN KEY (UserID) REFERENCES Users (UserID) ON DELETE CASCADE ON UPDATE NO ACTION
);

CREATE TABLE BlacklistedNovels (
    BlacklistedNovelID INT IDENTITY(1,1) PRIMARY KEY,
    NovelID INT,
    CreatedAt DATETIME DEFAULT GETDATE(),
    Note NVARCHAR(255),
    FOREIGN KEY (NovelID) REFERENCES Novels (NovelID) ON DELETE CASCADE ON UPDATE NO ACTION
);

